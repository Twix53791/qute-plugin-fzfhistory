#!/bin/bash
# MADE by Twix. https://github.com/Twix53791/
#=========================================================
# To use this plugin, first apply the patch:
#   ./apply-fzfhistory-patch.sh
#
# The patch modify two files in qutebrowser src:
#   tabbedbrowser.py (for closed-tabs-history)
#   history.py
# and update the CompletionHistory table of the history.sqlite
# database.
# It preserves your history and just add the time in
# a human readable format.
#
# NOTE: To not patch tabbedbrowser.py and doesn't use
# the closed-tabs extension of the plugin, run:
#   ./apply-fzfhistory-path.sh --only-history
#
#=========================================================

[[ -n $EDITOR ]] && editor=$EDITOR || editor="nano"

#==== FILES ==============================================

dbHistory="$QUTE_DATA_DIR/history.sqlite"
filterlist="$QUTE_DATA_DIR/history-filters"
closedtabs="$QUTE_DATA_DIR/closed-tabs-history"
tmpfile="/tmp/qute-plugin-fzfhistory-tmp"

#==== FUNCTIONS ==========================================
# Colors displayed in fzf
# 34/93/35 ; 34/93/92 ; 34/33/35 ; 94/33/92
# 36/34/32 ; 92/34/36
C1="34m";C2="93m";C3="35m"

table="CompletionHistory"
fields_order="human_time,title,url" # Set here the fields order displayed in fzf
sedpattern="s/^/\\\e[$C1/;s/|/\\\e[$C2  /;s/\(.*\)|/\1 \\\e[$C3| /"


# Build the file source of the fzf menu in 'history' mode
_build_history_list (){
    sqlite3 $dbHistory "select $fields_order from $table order by last_atime asc" | sed "$sedpattern" > $tmpfile
}

# Build the file source of the fzf menu in 'close-tabs' mode
_build_closedtabs_list (){
    sed "$sedpattern" $closedtabs > $tmpfile
}

# Fzf menu. $1: mode ; $2: select file to send the picked urls to qutebrowser
_fzf_menu (){
    helpmsg="ctrl-f: hide the url domain (add a new filter) ;  ctrl-e: edit filters list"

    sedfilter="s/.*| //;s/.*\/\///;s/\/.*$//"

    if [[ $1 == "closed-tabs" ]]; then
        export FZF_DEFAULT_OPTS="--reverse --ansi -m \
              --bind 'change:first,right:toggle+down,left:deselect-all,alt-q:abort' \
              --preview='echo -e {} | sed \"s/\(.*\)| /\1\n/\" | head -c 300' \
              --preview-window='down,20%,wrap'"
    else
        export FZF_DEFAULT_OPTS="--reverse --ansi -m \
              --bind 'change:first,right:toggle+down,left:deselect-all,alt-q:abort' \
              --bind 'ctrl-f:execute-silent(echo {} | sed \"$sedfilter\" >> $filterlist)+execute(echo :refresh)+abort' \
              --bind 'ctrl-e:execute(echo :edit)+abort' \
              --preview='echo -e {} | sed \"s/\(.*\)| /\1\n/\" | head -c 300; echo -e \"\\n$helpmsg\"' \
              --preview-window='down,20%,wrap'"
    fi

    # Filters with grep -v
    filters="$(sed ':a;N;$!ba;s/\n/|/g' $filterlist)"

    # Launch fzf
    if [[ $1 == "closed-tabs" ]]; then
        output=$(echo -e "$(tac $tmpfile)" | fzf)
    else
        output=$(echo -e "$(tac $tmpfile)" | grep -Ev "$filters" | fzf)
    fi

    [[ -z $output ]] && exit

    # Refresh after ctrl + f
    [[ $output == ":refresh" ]] && _fzf_menu "$@"

    # Edit filters
    if [[ $output == ":edit" ]]; then
        $editor $filterlist
        _fzf_menu "$@"
    fi

    # Get the urls
    urlslist="$(while read line; do echo ${line##*| };done <<< $output)"

    # Write the file used by history-fzf userscript to
    #  send commands to qutebrowser
    echo "$urlslist" > "$2"
}

_rebuild_CompletionHistory_table (){
    tmpdata="/tmp/rebuild_CompletionHistory"

    # Store the content of CompletionHistory in a tmp file
    sqlite3 $dbHistory "SELECT last_atime FROM CompletionHistory" > $tmpdata

    # Counter to build a progress bar
    ntotal=$(wc -l $tmpfile)
    onepercent=$(echo $((${ntotal%% *} / 100)))
    i=0
    p=0
    echo "Total of rows in CompletionHistory : ${ntotal%% *}"
    echo "==================================="
    echo "$p % done"

    while read atime; do
        # Progress view
        if (($i % ($onepercent + 1) == 0 )); then
            ((p++))
            [[ $p -le 100 ]] && echo "$p % done"
        fi

        # Translate atime in htime
        htime="$(date '+%Y %B %d %H:%M:%S' -d @$atime)"

        # Update the humain_time col
        sqlite3 $dbHistory "UPDATE CompletionHistory SET human_time = '$htime' WHERE last_atime = $atime"

        ((i++))
    done < $tmpdata
}

#==== MAIN ===============================================
_main (){
    mode="$1"
    selectfile="$2"

    if [[ $mode == "closed-tabs" ]]; then
        _build_closedtabs_list
        _fzf_menu $mode "$selectfile"

    elif [[ $mode == "rebuild" ]]; then
        _rebuild_CompletionHistory_table

    else
        _build_history_list
        _fzf_menu $mode "$selectfile"
    fi
}

# $1: mode ; $2: file path to communicate with qutebrowser (to send the fzf selection)
_main "$@"

